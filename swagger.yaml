openapi: "3.0.0"
info:
  title: learn express and swagger 
  description: Learning to write documentation
  version: 1.1.0
  contact:
    email: argademayur2002@gmail.com
    url: "https://github.com/mayur-argade"

# servers: 
#   - url: "https://localhost:4000/api/v1"
#     description: for localhost - secure
#   - url: "https://localhost:4000/api/v1"
#     description: for localhost -regular

servers: 
  - url: "{protocol}://localhost:4000/api/{version}"
    description: for localhost
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token      
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /mayur:
    get:
      tags:
        - string
      summary: returns a greet message from Mayur
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        400:
          description: Bad request
        500: 
          description: Internal server error
  
  /object:
    get:
      tags:
        - object
      summary: returns a unique course
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:  
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500: 
          description: Internal server error

  /courses:
    get:
      tags:
        - Array
      summary: returns all course
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:  
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
        400:
          description: Bad request
        500: 
          description: Internal server error

  /mycourses/{courseId}:
    get:
      tags:
        - string
      summary: returns course based on request ID
      parameters:
        - name: courseId
          in: path
          required: true
          default: 22
          schema:
            type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:  
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500: 
          description: Internal server error

  /addcourse:
    post:
      tags:
        - string
      summary: adds a new course to existing courses
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:  
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad request
        500: 
          description: Internal server error

  /coursequery:
    get:
      tags:
        - string
      summary: trying to learn about query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [delhi, london, jaipur]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [web, mobile]
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  device:
                    type: string

        400:
          description: Bad request
        500: 
          description: Internal server error

  /courseupload:
    post:
      tags:
        - string
      summary: uploading course image
      parameters:
        - in: header 
          name: auth
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: All good success
        400:
          description: Bad request
        500: 
          description: Internal server error

